// Lattice v0.5 based on Skeleton v1.2
// Lattice Copyright 2012 Torstein Thune
// Free to use under the MIT license.
// http://www.opensource.org/licenses/mit-license.php
// 27. oct. 2012

/* Compatibility
==================================================
    
    The grid is compatible with IE9+, Chrome, Firefox and Opera.
    IE8 renders the base version, but not the responsive ones.

*/

/* Credits
==================================================
    
    Lattice Grid is based on Skeleton by Dave Gamache.
    Skeleton Copyright 2011, Dave Gamache

*/

/* Table of Contents
==================================================

//  #Mixins
//  #Dictionary
//  #Configurations
    #Base Grid
    #Desktop (>1300px)
    #Laptop (<1300px)
    #Tablet (Portrait)
    #Mobile (Portrait)
    #Mobile (Landscape)

*/

// #Mixins
//==================================================

@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: $argument;
  -ms-#{$name}: $argument;
  -moz-#{$name}: $argument;
  -o-#{$name}: $argument;
  #{$name}: $argument;
}

// #Dictionary to make beautiful column class names
//==================================================
$numbers: one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,forteen,fifteen,sixteen,seventeen,eighteen,nineteen,twenty,twentyone,twentytwo,twentythree,twentyfour,twentyfive,twentysix,twentyseven,twentyeight,twentynine,thirty,thirtyone,thirtytwo,thitythree,thirtyfour,thirtyfive,thirtysix,thirtyseven,thirtyeight,thirtynine,forty,fortyoe,fortytwo,fortythree,fortyfour,fortyfive,fortysix,fortyseven,fortyeight,fortynine,fifty;

// #Configurations
//==================================================

$grid-width: 100%;          // default: 100% {%, px, em}

$number-of-columns: 16;     // default: 16

$padding: 25px;             // default: 16px (so gutter between content is 16px*2)

$grid-alignment: 'center';   // default: center {none, left, center, right}

$column-width: $grid-width/$number-of-columns;

// cutoff points each will have specific styling, place in rising order
$target-mobile: true;
$mobile-cutoffs: 360px,480px,800px;

$target-tablet: true;
$tablet-cutoffs: 920px,1024px,1280px;

$target-desktop: true;
$desktop-cutoffs: 1024px,1280px,1366px,1920px;

$target-retina: true;

/* #Base Grid
================================================== */

.container { 
    position:relative;
    width:80%;
    padding:0; 
    @if $grid-alignment == 'center' { margin: 0 auto; }
    @if $grid-alignment == 'right' { float: right; }
    @if $grid-alignment == 'left' { float: left; }
    }
.container .column,
.container .columns {
    float:left;
    padding: $padding;
    @include vendor-prefix(box-sizing, border-box);
}

/* Base Grid */
@for $i from 1 to $number-of-columns+1 {
    @if $number-of-columns <= length($numbers) {
        .#{nth($numbers,$i)}.columns, .#{nth($numbers,$i)}.column { width: $column-width * $i; }
    }
    @if $number-of-columns > length($numbers) { 
        .#{c$i}.columns, .#{c$i}.column { width: $column-width * $i; }
    } 
}

.one-third.column { width: $grid-width/3; }
.two-thirds.column { width: ($grid-width/3)*2; }

/* Offsets */
@for $i from 1 to $number-of-columns+1 {
    @if $number-of-columns <= length($numbers) {
        .offset-by-#{nth($numbers,$i)}     { margin-left: $column-width * $i; }
        .offset-right-by-#{nth($numbers,$i)}     { margin-right: $column-width * $i; }
        .offset-top-by-#{nth($numbers,$i)} { margin-top: $padding * $i; }
        .offset-bottom-by-#{nth($numbers,$i)} { margin-bottom: $padding * $i; }
    }
    @if $number-of-columns > length($numbers) { 
        .offset-by-#{$i}     { margin-left: $column-width * $i; }
    } 
    
}

/* #Base Grid
================================================== */

    .row                                { margin-bottom: 24px; }

    /* Nested Column Classes */
    .column.alpha, .columns.alpha               { padding: 0; }
    .column.omega, .columns.omega               { padding: 0; }

/* #Desktop resolutions
================================================= */

@media only screen and (min-width: 1025px) and (max-width: 2599px) {
    .container {
        width: 980px;
    }

}

//@for $i from 1 to length($desktop-cutoffs)+1 {
//    @media only screen and (min-width: 1300px) and (max-width: 2599px) {
//
//    }  
//}

/* #Tablet resolutions
================================================= */
@media only screen and (min-width: 768px) and (max-width: 1024px) {
  .container {
    width: 90%;
    max-width: 920px;
  }

}

/* #Mobile resolutions
================================================= */
@media only screen and (max-width: 767px) {
        .container { width: 90%;padding: 5%; }

        .carousel {
            display:none;
        }

        .one.column,
        .one.columns,
        .two.columns,
        .three.columns,
        .four.columns,
        .five.columns,
        .six.columns,
        .seven.columns,
        .eight.columns,
        .nine.columns,
        .ten.columns,
        .eleven.columns,
        .twelve.columns,
        .thirteen.columns,
        .fourteen.columns,
        .fifteen.columns,
        .sixteen.columns,
        .one-third.column,
        .two-thirds.column { display:block !important;width: 100%; }
    }



/* #Tablet Landscape (<1300px)
================================================== */
    @media only screen and (min-width: 768px) and (max-width: 959px) {
        .container { width: 768px; }
    }